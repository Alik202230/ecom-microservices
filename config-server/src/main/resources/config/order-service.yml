spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/ecom_order_service_db
    username: postgres
    password: root
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  kafka:
    topic: order-events
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.LongSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    admin:
      properties:
        bootstrap-servers: localhost:9092
#  rabbitmq:
#    host: localhost
#    port: 5672
#    username: guest
#    password: guest

# actuator config
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  health:
    circuit breakers:
      enabled: true
  tracing:
    sample:
      probability: 1.0
eureka:
  client:
    serverUrl:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true

# Circuit Breaker
resilience4j:
  circuit breaker:
    instances:
      productService:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        waitDurationInOpenState: 10s
        failureRateThreshold: 50
        automaticTransitionFromOpenToHalfOpenEnabled: true
        slidingWindowType: count_based
  retry:
    instances:
      retryBreaker:
        max-attempts: 5
        waitDuration: 500ms
  rate limiter:
    instances:
      rateBreaker:
        timeout-duration: 0
        limit-refresh-period: 4s
        limit-for-period: 2
server:
  port: 8083

