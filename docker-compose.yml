services:
#  postgres:
#    container_name: postgres_container
#    image: postgres:14
#    environment:
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: root
#      PGDATA: /data/postgres
#    volumes:
#      - postgres:/data/postgres
#    ports:
#      - "5432:5432"
#    networks:
#      - backend
#    restart: unless-stopped
#
#  pgadmin:
#    container_name: pgadmin_container
#    image: dpage/pgadmin4:latest
#    environment:
#      PGADMIN_DEFAULT_EMAIL: admin@admin.com
#      PGADMIN_DEFAULT_PASSWORD: admin
#    ports:
#      - "5050:80"
#    volumes:
#      - pgadmin_data:/var/lib/pgadmin
#    networks:
#      - backend
#    depends_on:
#      - postgres
#    restart: unless-stopped

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper-order
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka-order
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka-order:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  zipkin:
    container_name: zipkin_container
    image: openzipkin/zipkin:latest
    ports:
      - "9411:9411"   # UI + API
    networks:
      - backend
    restart: unless-stopped
  redis:
    image: redis:latest
    container_name: order-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: always

#  keycloak:
#    image: quay.io/keycloak/keycloak:26.0.2
#    container_name: keycloak
#    restart: always
#    environment:
#      KEYCLOAK_ADMIN: admin
#      KEYCLOAK_ADMIN_PASSWORD: admin
#    command: ["start-dev"]
#    ports:
#      - "8443:8080"
#    volumes:
#      - ./tls.keystore:/etc/x509/https/tls.keystore


volumes:
  redis-data:
#  postgres:
#  pgadmin_data:

networks:
  backend: